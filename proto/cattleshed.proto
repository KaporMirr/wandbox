syntax = "proto3";

// option java_multiple_files = true;
// option java_package = "io.grpc.examples.helloworld";
// option java_outer_classname = "HelloWorldProto";
// option objc_class_prefix = "HLW";
option cc_enable_arenas = true;

package cattleshed;

service Cattleshed {
  rpc GetVersion(GetVersionRequest) returns (GetVersionResponse) {}
  rpc RunJob(stream RunJobRequest) returns (stream RunJobResponse) {}
}

message GetVersionRequest {
}

message SingleSwitch {
  string name = 1;
  bool default_value = 2;
  string display_flags = 3;
  string display_name = 4;
}
message SelectSwitchOption {
  string name = 1;
  string display_flags = 2;
  string display_name = 3;
}
message SelectSwitch {
  string name = 1;
  string default_value = 2;
  repeated SelectSwitchOption options = 3;
}
message Switch {
  oneof data {
    SingleSwitch single = 1;
    SelectSwitch select = 2;
  }
}
message CompilerInfo {
  string name = 1;
  string version = 2;
  string language = 3;
  string display_name = 4;
  repeated string templates = 5;
  bool compiler_option_raw = 6;
  bool runtime_option_raw = 7;
  string display_compile_command = 8;
  repeated Switch switches = 9;
}

message Template {
  string name = 1;
  bytes stdin = 2;
  bytes compiler_option_raw = 3;
  bytes runtime_option_raw = 4;
  bytes default_source = 5;
  repeated Source sources = 6;
  string compiler_options = 7;
}

message GetVersionResponse {
  repeated CompilerInfo compiler_info = 1;
  repeated Template templates = 5;
}

message Source {
  string file_name = 1;
  bytes source = 2;
}

message Issuer {
  string remote_addr = 1;
  string real_ip = 2;
  string forwarded_for = 3;
  string path_info = 4;
  string github_username = 5;
}

message RunJobRequest {
  message Start {
    string compiler = 1;
    bytes stdin = 2;
    bytes compiler_option_raw = 3;
    bytes runtime_option_raw = 4;
    bytes default_source = 5;
    repeated Source sources = 6;
    string compiler_options = 7;
    Issuer issuer = 8;
  }

  oneof data {
    Start start = 1;
  }
}

message RunJobResponse {
  enum Type {
    CONTROL = 0;
    COMPILER_STDOUT = 1;
    COMPILER_STDERR = 2;
    STDOUT = 3;
    STDERR = 4;
    EXIT_CODE = 5;
    SIGNAL = 6;
  }
  Type type = 1;
  bytes data = 2;
}
